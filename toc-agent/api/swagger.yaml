swagger: '2.0'
info:
  version: 1.0.0
  title: toc-agent
  description: Worker API to create backup and restoration
  termsOfService: "http://gyk4j.github.io/terms/"
  contact:
    email: "147011991+gyk4j@users.noreply.github.com"
  license:
    name: "Eclipse Public License 2.0 (EPL)"
    url: "https://www.eclipse.org/legal/epl-2.0/"
host: 0.0.0.0:8888
basePath: /v1
tags:
  - name: "backup"
    description: "For running backup jobs and querying backup job status"
    externalDocs:
      description: "Find out more about TOC"
      url: "https://github.com/gyk4j/toc"
  - name: "restoration"
    description: "For running restoration jobs and querying restoration job status"
    externalDocs:
      description: "Find out more about TOC"
      url: "https://github.com/gyk4j/toc"
  - name: "transfer"
    description: "For running backup transfer jobs and querying transfer status"
    externalDocs:
      description: "Find out more about TOC"
      url: "https://github.com/gyk4j/toc"
schemes:
  - "http"
definitions:
  # Severity:
    # type: string
    # enum: &SEVERITY
      # - error
      # - warning
      # - info
      # - debug
      # - trace
  # Connections:
    # type: string
    # enum: &CONNECTIONS
      # - online
      # - offline
  # Statuses:
    # type: string
    # enum: &STATUSES
      # - queued
      # - in-progress
      # - completed
      # - failed
  # Servers:
    # type: string
    # enum: &SERVERS
      # - web
      # - file
      # - db
      # - mail
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        x-omitempty: false
      type:
        type: "string"
        x-omitempty: false
        description: "Severity level"
        enum: [ error, warning, info, debug, trace ]
      message:
        type: "string"
        x-omitempty: false
    example:
      code: 0
      type: "info"
      message: "message"
  Snapshot:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        x-omitempty: false
      file:
        type: "string"
        x-omitempty: false
      status:
        type: "string"
        x-omitempty: false
        description: "Snapshot Status"
        enum: [ queued, in-progress, completed, failed ]
      complete:
        type: "boolean"
        x-omitempty: false
    xml:
      name: "snapshot"
    example:
      file: "/var/opt/toc/archive/20241231T235959Z-server.tar.gz"
      id: 1
      status: "completed"
      complete: true
  Backup:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        x-omitempty: false
      time:
        type: "string"
        format: "date-time"
        x-omitempty: false
      snapshots:
        type: "array"
        x-omitempty: false
        items:
          $ref: "#/definitions/Snapshot"
    xml:
      name: "Backup"
    example:
      time: "2024-12-31T23:59:59Z"
      id: 1
  Restoration:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        x-omitempty: false
      backup:
        $ref: "#/definitions/Backup"
        x-omitempty: false
      status:
        type: "string"
        x-omitempty: false
        description: "Restoration Status"
        enum: [ queued, in-progress, completed, failed ]
    xml:
      name: "Restoration"
    example:
      id: 1
  Transfer:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        x-omitempty: false
      backup:
        $ref: "#/definitions/Backup"
        x-omitempty: false
      status:
        type: "string"
        x-omitempty: false
        description: "Transfer Status"
        enum: [ queued, in-progress, completed, failed ]
    xml:
      name: "Transfer"
    example:
      id: 1
      status: "failed"
paths:
  /backups:
    post:
      tags:
        - "backup"
      summary: "Create a new backup snapshot"
      description: "Create a new backup snapshot"
      operationId: "newBackup"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Backup started"
          schema:
            $ref: "#/definitions/Backup"
        "403":
          description: "Forbidden from creating duplicate/repeat backup"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Main backup server not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "Main TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "502":
          description: "Bad gateway. Main backup server error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable on main TOC controller"
          schema:
            $ref: "#/definitions/ApiResponse"
        "504":
          description: "Gateway timeout. Main backup server did not reply."
          schema:
            $ref: "#/definitions/ApiResponse"
    get:
      tags:
        - "backup"
      summary: "Query backup info"
      description: "Retrieve information and state of all backups and their snapshots"
      operationId: "getBackup"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Backup info retrieved"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Backup"
        "403":
          description: "Forbidden from querying backup info"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Backup not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/ApiResponse"
  /backups/{backupId}:
    get:
      tags:
        - "backup"
      summary: "Find backup by ID"
      description: "Query a single backup"
      operationId: "getBackupById"
      produces:
        - "application/json"
      parameters:
        - name: "backupId"
          in: "path"
          description: "ID of backup to return"
          required: true
          type: "integer"
          format: "int64"
          x-exportParamName: "BackupId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Backup"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Backup not found"
          schema:
            $ref: "#/definitions/ApiResponse"
  /restorations:
    post:
      tags:
        - "restoration"
      summary: "Start a backup restoration attempt"
      description: "Run backup restoration and return immediately without waiting"
      operationId: "newRestoration"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Backup and associated snapshots for restoration"
          required: true
          schema:
            $ref: "#/definitions/Backup"
          x-exportParamName: "Body"
      responses:
        "200":
          description: "Restoration started"
          schema:
            $ref: "#/definitions/Restoration"
        "403":
          description: "Forbidden from creating duplicate/repeat restoration"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Stepup backup server not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "Stepup TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "502":
          description: "Bad gateway. Stepup backup server error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable on stepup TOC controller"
          schema:
            $ref: "#/definitions/ApiResponse"
        "504":
          description: "Gateway timeout. Stepup backup server did not reply."
          schema:
            $ref: "#/definitions/ApiResponse"
    get:
      tags:
        - "restoration"
      summary: "Query restoration info"
      description: "Retrieve information and state of all restorations, their backup and snapshots"
      operationId: "getRestoration"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Restoration info retrieved"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Restoration"
        "403":
          description: "Forbidden from querying restoration info"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Restoration not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/ApiResponse"
  /restorations/{restorationId}:
    get:
      tags:
        - "restoration"
      summary: "Find restoration by ID"
      description: "Query a single restoration"
      operationId: "getRestorationById"
      produces:
        - "application/json"
      parameters:
        - name: "restorationId"
          in: "path"
          description: "ID of restoration to return"
          required: true
          type: "integer"
          format: "int64"
          x-exportParamName: "RestorationId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Restoration"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Restoration not found"
          schema:
            $ref: "#/definitions/ApiResponse"
  /transfers:
    post:
      tags:
        - "transfer"
      summary: "Start a backup transfer attempt"
      description: "Run transfer and return immediately without waiting"
      operationId: "newTransfer"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Backup and associated snapshots for restoration"
          required: true
          schema:
            $ref: "#/definitions/Backup"
          x-exportParamName: "Body"
      responses:
        "200":
          description: "Transfer started"
          schema:
            $ref: "#/definitions/Transfer"
        "403":
          description: "Forbidden from creating duplicate/repeat transfer"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Stepup backup server not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "Stepup TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "502":
          description: "Bad gateway. Stepup backup server error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable on stepup TOC controller"
          schema:
            $ref: "#/definitions/ApiResponse"
        "504":
          description: "Gateway timeout. Stepup backup server did not reply."
          schema:
            $ref: "#/definitions/ApiResponse"
    get:
      tags:
        - "transfer"
      summary: "Query transfer status"
      description: "Retrieve status of all transfers"
      operationId: "getTransfer"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Transfer info retrieved"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transfer"
        "403":
          description: "Forbidden from querying transfer status"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Transfer not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/ApiResponse"
  /transfers/{transferId}:
    get:
      tags:
        - "transfer"
      summary: "Find transfer by ID"
      description: "Query a single transfer"
      operationId: "getTransferById"
      produces:
        - "application/json"
      parameters:
        - name: "transferId"
          in: "path"
          description: "ID of transfer to return"
          required: true
          type: "integer"
          format: "int64"
          x-exportParamName: "TransferId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Transfer"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Transfer not found"
          schema:
            $ref: "#/definitions/ApiResponse"
externalDocs:
  description: "Find out more about TOC"
  url: "https://github.com/gyk4j/toc"
