// Code generated by go-swagger; DO NOT EDIT.

package quota

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gyk4j/toc/toc/server/models"
)

// GetQuotaOKCode is the HTTP code returned for type GetQuotaOK
const GetQuotaOKCode int = 200

/*
GetQuotaOK Quotas retrieved

swagger:response getQuotaOK
*/
type GetQuotaOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Quota `json:"body,omitempty"`
}

// NewGetQuotaOK creates GetQuotaOK with default headers values
func NewGetQuotaOK() *GetQuotaOK {

	return &GetQuotaOK{}
}

// WithPayload adds the payload to the get quota o k response
func (o *GetQuotaOK) WithPayload(payload []*models.Quota) *GetQuotaOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get quota o k response
func (o *GetQuotaOK) SetPayload(payload []*models.Quota) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuotaOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Quota, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetQuotaForbiddenCode is the HTTP code returned for type GetQuotaForbidden
const GetQuotaForbiddenCode int = 403

/*
GetQuotaForbidden Forbidden from querying quota info

swagger:response getQuotaForbidden
*/
type GetQuotaForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetQuotaForbidden creates GetQuotaForbidden with default headers values
func NewGetQuotaForbidden() *GetQuotaForbidden {

	return &GetQuotaForbidden{}
}

// WithPayload adds the payload to the get quota forbidden response
func (o *GetQuotaForbidden) WithPayload(payload *models.APIResponse) *GetQuotaForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get quota forbidden response
func (o *GetQuotaForbidden) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuotaForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuotaNotFoundCode is the HTTP code returned for type GetQuotaNotFound
const GetQuotaNotFoundCode int = 404

/*
GetQuotaNotFound Quota not found

swagger:response getQuotaNotFound
*/
type GetQuotaNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetQuotaNotFound creates GetQuotaNotFound with default headers values
func NewGetQuotaNotFound() *GetQuotaNotFound {

	return &GetQuotaNotFound{}
}

// WithPayload adds the payload to the get quota not found response
func (o *GetQuotaNotFound) WithPayload(payload *models.APIResponse) *GetQuotaNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get quota not found response
func (o *GetQuotaNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuotaNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuotaMethodNotAllowedCode is the HTTP code returned for type GetQuotaMethodNotAllowed
const GetQuotaMethodNotAllowedCode int = 405

/*
GetQuotaMethodNotAllowed Bad request

swagger:response getQuotaMethodNotAllowed
*/
type GetQuotaMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetQuotaMethodNotAllowed creates GetQuotaMethodNotAllowed with default headers values
func NewGetQuotaMethodNotAllowed() *GetQuotaMethodNotAllowed {

	return &GetQuotaMethodNotAllowed{}
}

// WithPayload adds the payload to the get quota method not allowed response
func (o *GetQuotaMethodNotAllowed) WithPayload(payload *models.APIResponse) *GetQuotaMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get quota method not allowed response
func (o *GetQuotaMethodNotAllowed) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuotaMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuotaInternalServerErrorCode is the HTTP code returned for type GetQuotaInternalServerError
const GetQuotaInternalServerErrorCode int = 500

/*
GetQuotaInternalServerError TOC controller error

swagger:response getQuotaInternalServerError
*/
type GetQuotaInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetQuotaInternalServerError creates GetQuotaInternalServerError with default headers values
func NewGetQuotaInternalServerError() *GetQuotaInternalServerError {

	return &GetQuotaInternalServerError{}
}

// WithPayload adds the payload to the get quota internal server error response
func (o *GetQuotaInternalServerError) WithPayload(payload *models.APIResponse) *GetQuotaInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get quota internal server error response
func (o *GetQuotaInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuotaInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuotaServiceUnavailableCode is the HTTP code returned for type GetQuotaServiceUnavailable
const GetQuotaServiceUnavailableCode int = 503

/*
GetQuotaServiceUnavailable Service unavailable

swagger:response getQuotaServiceUnavailable
*/
type GetQuotaServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetQuotaServiceUnavailable creates GetQuotaServiceUnavailable with default headers values
func NewGetQuotaServiceUnavailable() *GetQuotaServiceUnavailable {

	return &GetQuotaServiceUnavailable{}
}

// WithPayload adds the payload to the get quota service unavailable response
func (o *GetQuotaServiceUnavailable) WithPayload(payload *models.APIResponse) *GetQuotaServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get quota service unavailable response
func (o *GetQuotaServiceUnavailable) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuotaServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
