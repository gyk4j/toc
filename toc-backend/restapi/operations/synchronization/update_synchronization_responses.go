// Code generated by go-swagger; DO NOT EDIT.

package synchronization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gyk4j/toc/toc-backend/models"
)

// UpdateSynchronizationOKCode is the HTTP code returned for type UpdateSynchronizationOK
const UpdateSynchronizationOKCode int = 200

/*
UpdateSynchronizationOK Synchronization updated

swagger:response updateSynchronizationOK
*/
type UpdateSynchronizationOK struct {

	/*
	  In: Body
	*/
	Payload *models.Synchronization `json:"body,omitempty"`
}

// NewUpdateSynchronizationOK creates UpdateSynchronizationOK with default headers values
func NewUpdateSynchronizationOK() *UpdateSynchronizationOK {

	return &UpdateSynchronizationOK{}
}

// WithPayload adds the payload to the update synchronization o k response
func (o *UpdateSynchronizationOK) WithPayload(payload *models.Synchronization) *UpdateSynchronizationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update synchronization o k response
func (o *UpdateSynchronizationOK) SetPayload(payload *models.Synchronization) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSynchronizationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSynchronizationForbiddenCode is the HTTP code returned for type UpdateSynchronizationForbidden
const UpdateSynchronizationForbiddenCode int = 403

/*
UpdateSynchronizationForbidden Forbidden from updating synchronization

swagger:response updateSynchronizationForbidden
*/
type UpdateSynchronizationForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewUpdateSynchronizationForbidden creates UpdateSynchronizationForbidden with default headers values
func NewUpdateSynchronizationForbidden() *UpdateSynchronizationForbidden {

	return &UpdateSynchronizationForbidden{}
}

// WithPayload adds the payload to the update synchronization forbidden response
func (o *UpdateSynchronizationForbidden) WithPayload(payload *models.APIResponse) *UpdateSynchronizationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update synchronization forbidden response
func (o *UpdateSynchronizationForbidden) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSynchronizationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSynchronizationNotFoundCode is the HTTP code returned for type UpdateSynchronizationNotFound
const UpdateSynchronizationNotFoundCode int = 404

/*
UpdateSynchronizationNotFound TOC controller not found

swagger:response updateSynchronizationNotFound
*/
type UpdateSynchronizationNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewUpdateSynchronizationNotFound creates UpdateSynchronizationNotFound with default headers values
func NewUpdateSynchronizationNotFound() *UpdateSynchronizationNotFound {

	return &UpdateSynchronizationNotFound{}
}

// WithPayload adds the payload to the update synchronization not found response
func (o *UpdateSynchronizationNotFound) WithPayload(payload *models.APIResponse) *UpdateSynchronizationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update synchronization not found response
func (o *UpdateSynchronizationNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSynchronizationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSynchronizationMethodNotAllowedCode is the HTTP code returned for type UpdateSynchronizationMethodNotAllowed
const UpdateSynchronizationMethodNotAllowedCode int = 405

/*
UpdateSynchronizationMethodNotAllowed Bad request

swagger:response updateSynchronizationMethodNotAllowed
*/
type UpdateSynchronizationMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewUpdateSynchronizationMethodNotAllowed creates UpdateSynchronizationMethodNotAllowed with default headers values
func NewUpdateSynchronizationMethodNotAllowed() *UpdateSynchronizationMethodNotAllowed {

	return &UpdateSynchronizationMethodNotAllowed{}
}

// WithPayload adds the payload to the update synchronization method not allowed response
func (o *UpdateSynchronizationMethodNotAllowed) WithPayload(payload *models.APIResponse) *UpdateSynchronizationMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update synchronization method not allowed response
func (o *UpdateSynchronizationMethodNotAllowed) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSynchronizationMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSynchronizationInternalServerErrorCode is the HTTP code returned for type UpdateSynchronizationInternalServerError
const UpdateSynchronizationInternalServerErrorCode int = 500

/*
UpdateSynchronizationInternalServerError TOC controller error

swagger:response updateSynchronizationInternalServerError
*/
type UpdateSynchronizationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewUpdateSynchronizationInternalServerError creates UpdateSynchronizationInternalServerError with default headers values
func NewUpdateSynchronizationInternalServerError() *UpdateSynchronizationInternalServerError {

	return &UpdateSynchronizationInternalServerError{}
}

// WithPayload adds the payload to the update synchronization internal server error response
func (o *UpdateSynchronizationInternalServerError) WithPayload(payload *models.APIResponse) *UpdateSynchronizationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update synchronization internal server error response
func (o *UpdateSynchronizationInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSynchronizationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSynchronizationBadGatewayCode is the HTTP code returned for type UpdateSynchronizationBadGateway
const UpdateSynchronizationBadGatewayCode int = 502

/*
UpdateSynchronizationBadGateway Bad gateway. TOC controller error

swagger:response updateSynchronizationBadGateway
*/
type UpdateSynchronizationBadGateway struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewUpdateSynchronizationBadGateway creates UpdateSynchronizationBadGateway with default headers values
func NewUpdateSynchronizationBadGateway() *UpdateSynchronizationBadGateway {

	return &UpdateSynchronizationBadGateway{}
}

// WithPayload adds the payload to the update synchronization bad gateway response
func (o *UpdateSynchronizationBadGateway) WithPayload(payload *models.APIResponse) *UpdateSynchronizationBadGateway {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update synchronization bad gateway response
func (o *UpdateSynchronizationBadGateway) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSynchronizationBadGateway) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(502)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSynchronizationServiceUnavailableCode is the HTTP code returned for type UpdateSynchronizationServiceUnavailable
const UpdateSynchronizationServiceUnavailableCode int = 503

/*
UpdateSynchronizationServiceUnavailable Service unavailable on TOC controller

swagger:response updateSynchronizationServiceUnavailable
*/
type UpdateSynchronizationServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewUpdateSynchronizationServiceUnavailable creates UpdateSynchronizationServiceUnavailable with default headers values
func NewUpdateSynchronizationServiceUnavailable() *UpdateSynchronizationServiceUnavailable {

	return &UpdateSynchronizationServiceUnavailable{}
}

// WithPayload adds the payload to the update synchronization service unavailable response
func (o *UpdateSynchronizationServiceUnavailable) WithPayload(payload *models.APIResponse) *UpdateSynchronizationServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update synchronization service unavailable response
func (o *UpdateSynchronizationServiceUnavailable) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSynchronizationServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSynchronizationGatewayTimeoutCode is the HTTP code returned for type UpdateSynchronizationGatewayTimeout
const UpdateSynchronizationGatewayTimeoutCode int = 504

/*
UpdateSynchronizationGatewayTimeout Gateway timeout. TOC controller did not reply.

swagger:response updateSynchronizationGatewayTimeout
*/
type UpdateSynchronizationGatewayTimeout struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewUpdateSynchronizationGatewayTimeout creates UpdateSynchronizationGatewayTimeout with default headers values
func NewUpdateSynchronizationGatewayTimeout() *UpdateSynchronizationGatewayTimeout {

	return &UpdateSynchronizationGatewayTimeout{}
}

// WithPayload adds the payload to the update synchronization gateway timeout response
func (o *UpdateSynchronizationGatewayTimeout) WithPayload(payload *models.APIResponse) *UpdateSynchronizationGatewayTimeout {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update synchronization gateway timeout response
func (o *UpdateSynchronizationGatewayTimeout) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSynchronizationGatewayTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(504)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
