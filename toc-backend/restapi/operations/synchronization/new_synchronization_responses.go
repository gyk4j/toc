// Code generated by go-swagger; DO NOT EDIT.

package synchronization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gyk4j/toc/toc/server/models"
)

// NewSynchronizationOKCode is the HTTP code returned for type NewSynchronizationOK
const NewSynchronizationOKCode int = 200

/*
NewSynchronizationOK Synchronization started

swagger:response newSynchronizationOK
*/
type NewSynchronizationOK struct {

	/*
	  In: Body
	*/
	Payload *models.Synchronization `json:"body,omitempty"`
}

// NewNewSynchronizationOK creates NewSynchronizationOK with default headers values
func NewNewSynchronizationOK() *NewSynchronizationOK {

	return &NewSynchronizationOK{}
}

// WithPayload adds the payload to the new synchronization o k response
func (o *NewSynchronizationOK) WithPayload(payload *models.Synchronization) *NewSynchronizationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new synchronization o k response
func (o *NewSynchronizationOK) SetPayload(payload *models.Synchronization) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewSynchronizationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NewSynchronizationForbiddenCode is the HTTP code returned for type NewSynchronizationForbidden
const NewSynchronizationForbiddenCode int = 403

/*
NewSynchronizationForbidden Forbidden from starting synchronization

swagger:response newSynchronizationForbidden
*/
type NewSynchronizationForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewNewSynchronizationForbidden creates NewSynchronizationForbidden with default headers values
func NewNewSynchronizationForbidden() *NewSynchronizationForbidden {

	return &NewSynchronizationForbidden{}
}

// WithPayload adds the payload to the new synchronization forbidden response
func (o *NewSynchronizationForbidden) WithPayload(payload *models.APIResponse) *NewSynchronizationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new synchronization forbidden response
func (o *NewSynchronizationForbidden) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewSynchronizationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NewSynchronizationNotFoundCode is the HTTP code returned for type NewSynchronizationNotFound
const NewSynchronizationNotFoundCode int = 404

/*
NewSynchronizationNotFound TOC controller not found

swagger:response newSynchronizationNotFound
*/
type NewSynchronizationNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewNewSynchronizationNotFound creates NewSynchronizationNotFound with default headers values
func NewNewSynchronizationNotFound() *NewSynchronizationNotFound {

	return &NewSynchronizationNotFound{}
}

// WithPayload adds the payload to the new synchronization not found response
func (o *NewSynchronizationNotFound) WithPayload(payload *models.APIResponse) *NewSynchronizationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new synchronization not found response
func (o *NewSynchronizationNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewSynchronizationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NewSynchronizationMethodNotAllowedCode is the HTTP code returned for type NewSynchronizationMethodNotAllowed
const NewSynchronizationMethodNotAllowedCode int = 405

/*
NewSynchronizationMethodNotAllowed Bad request

swagger:response newSynchronizationMethodNotAllowed
*/
type NewSynchronizationMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewNewSynchronizationMethodNotAllowed creates NewSynchronizationMethodNotAllowed with default headers values
func NewNewSynchronizationMethodNotAllowed() *NewSynchronizationMethodNotAllowed {

	return &NewSynchronizationMethodNotAllowed{}
}

// WithPayload adds the payload to the new synchronization method not allowed response
func (o *NewSynchronizationMethodNotAllowed) WithPayload(payload *models.APIResponse) *NewSynchronizationMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new synchronization method not allowed response
func (o *NewSynchronizationMethodNotAllowed) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewSynchronizationMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NewSynchronizationInternalServerErrorCode is the HTTP code returned for type NewSynchronizationInternalServerError
const NewSynchronizationInternalServerErrorCode int = 500

/*
NewSynchronizationInternalServerError TOC controller error

swagger:response newSynchronizationInternalServerError
*/
type NewSynchronizationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewNewSynchronizationInternalServerError creates NewSynchronizationInternalServerError with default headers values
func NewNewSynchronizationInternalServerError() *NewSynchronizationInternalServerError {

	return &NewSynchronizationInternalServerError{}
}

// WithPayload adds the payload to the new synchronization internal server error response
func (o *NewSynchronizationInternalServerError) WithPayload(payload *models.APIResponse) *NewSynchronizationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new synchronization internal server error response
func (o *NewSynchronizationInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewSynchronizationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NewSynchronizationBadGatewayCode is the HTTP code returned for type NewSynchronizationBadGateway
const NewSynchronizationBadGatewayCode int = 502

/*
NewSynchronizationBadGateway Bad gateway. Backup server error

swagger:response newSynchronizationBadGateway
*/
type NewSynchronizationBadGateway struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewNewSynchronizationBadGateway creates NewSynchronizationBadGateway with default headers values
func NewNewSynchronizationBadGateway() *NewSynchronizationBadGateway {

	return &NewSynchronizationBadGateway{}
}

// WithPayload adds the payload to the new synchronization bad gateway response
func (o *NewSynchronizationBadGateway) WithPayload(payload *models.APIResponse) *NewSynchronizationBadGateway {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new synchronization bad gateway response
func (o *NewSynchronizationBadGateway) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewSynchronizationBadGateway) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(502)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NewSynchronizationServiceUnavailableCode is the HTTP code returned for type NewSynchronizationServiceUnavailable
const NewSynchronizationServiceUnavailableCode int = 503

/*
NewSynchronizationServiceUnavailable Service unavailable on TOC controller

swagger:response newSynchronizationServiceUnavailable
*/
type NewSynchronizationServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewNewSynchronizationServiceUnavailable creates NewSynchronizationServiceUnavailable with default headers values
func NewNewSynchronizationServiceUnavailable() *NewSynchronizationServiceUnavailable {

	return &NewSynchronizationServiceUnavailable{}
}

// WithPayload adds the payload to the new synchronization service unavailable response
func (o *NewSynchronizationServiceUnavailable) WithPayload(payload *models.APIResponse) *NewSynchronizationServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new synchronization service unavailable response
func (o *NewSynchronizationServiceUnavailable) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewSynchronizationServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NewSynchronizationGatewayTimeoutCode is the HTTP code returned for type NewSynchronizationGatewayTimeout
const NewSynchronizationGatewayTimeoutCode int = 504

/*
NewSynchronizationGatewayTimeout Gateway timeout. One or more servers did not reply.

swagger:response newSynchronizationGatewayTimeout
*/
type NewSynchronizationGatewayTimeout struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewNewSynchronizationGatewayTimeout creates NewSynchronizationGatewayTimeout with default headers values
func NewNewSynchronizationGatewayTimeout() *NewSynchronizationGatewayTimeout {

	return &NewSynchronizationGatewayTimeout{}
}

// WithPayload adds the payload to the new synchronization gateway timeout response
func (o *NewSynchronizationGatewayTimeout) WithPayload(payload *models.APIResponse) *NewSynchronizationGatewayTimeout {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new synchronization gateway timeout response
func (o *NewSynchronizationGatewayTimeout) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewSynchronizationGatewayTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(504)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
