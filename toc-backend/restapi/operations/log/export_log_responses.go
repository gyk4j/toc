// Code generated by go-swagger; DO NOT EDIT.

package log

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gyk4j/toc/toc-backend/models"
)

// ExportLogOKCode is the HTTP code returned for type ExportLogOK
const ExportLogOKCode int = 200

/*
ExportLogOK Logs exported

swagger:response exportLogOK
*/
type ExportLogOK struct {

	/*
	  In: Body
	*/
	Payload *models.Log `json:"body,omitempty"`
}

// NewExportLogOK creates ExportLogOK with default headers values
func NewExportLogOK() *ExportLogOK {

	return &ExportLogOK{}
}

// WithPayload adds the payload to the export log o k response
func (o *ExportLogOK) WithPayload(payload *models.Log) *ExportLogOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the export log o k response
func (o *ExportLogOK) SetPayload(payload *models.Log) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ExportLogOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ExportLogForbiddenCode is the HTTP code returned for type ExportLogForbidden
const ExportLogForbiddenCode int = 403

/*
ExportLogForbidden Forbidden from exporting logs

swagger:response exportLogForbidden
*/
type ExportLogForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewExportLogForbidden creates ExportLogForbidden with default headers values
func NewExportLogForbidden() *ExportLogForbidden {

	return &ExportLogForbidden{}
}

// WithPayload adds the payload to the export log forbidden response
func (o *ExportLogForbidden) WithPayload(payload *models.APIResponse) *ExportLogForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the export log forbidden response
func (o *ExportLogForbidden) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ExportLogForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ExportLogNotFoundCode is the HTTP code returned for type ExportLogNotFound
const ExportLogNotFoundCode int = 404

/*
ExportLogNotFound Quota not found

swagger:response exportLogNotFound
*/
type ExportLogNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewExportLogNotFound creates ExportLogNotFound with default headers values
func NewExportLogNotFound() *ExportLogNotFound {

	return &ExportLogNotFound{}
}

// WithPayload adds the payload to the export log not found response
func (o *ExportLogNotFound) WithPayload(payload *models.APIResponse) *ExportLogNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the export log not found response
func (o *ExportLogNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ExportLogNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ExportLogMethodNotAllowedCode is the HTTP code returned for type ExportLogMethodNotAllowed
const ExportLogMethodNotAllowedCode int = 405

/*
ExportLogMethodNotAllowed Bad request

swagger:response exportLogMethodNotAllowed
*/
type ExportLogMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewExportLogMethodNotAllowed creates ExportLogMethodNotAllowed with default headers values
func NewExportLogMethodNotAllowed() *ExportLogMethodNotAllowed {

	return &ExportLogMethodNotAllowed{}
}

// WithPayload adds the payload to the export log method not allowed response
func (o *ExportLogMethodNotAllowed) WithPayload(payload *models.APIResponse) *ExportLogMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the export log method not allowed response
func (o *ExportLogMethodNotAllowed) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ExportLogMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ExportLogInternalServerErrorCode is the HTTP code returned for type ExportLogInternalServerError
const ExportLogInternalServerErrorCode int = 500

/*
ExportLogInternalServerError TOC controller error

swagger:response exportLogInternalServerError
*/
type ExportLogInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewExportLogInternalServerError creates ExportLogInternalServerError with default headers values
func NewExportLogInternalServerError() *ExportLogInternalServerError {

	return &ExportLogInternalServerError{}
}

// WithPayload adds the payload to the export log internal server error response
func (o *ExportLogInternalServerError) WithPayload(payload *models.APIResponse) *ExportLogInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the export log internal server error response
func (o *ExportLogInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ExportLogInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ExportLogServiceUnavailableCode is the HTTP code returned for type ExportLogServiceUnavailable
const ExportLogServiceUnavailableCode int = 503

/*
ExportLogServiceUnavailable Service unavailable

swagger:response exportLogServiceUnavailable
*/
type ExportLogServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewExportLogServiceUnavailable creates ExportLogServiceUnavailable with default headers values
func NewExportLogServiceUnavailable() *ExportLogServiceUnavailable {

	return &ExportLogServiceUnavailable{}
}

// WithPayload adds the payload to the export log service unavailable response
func (o *ExportLogServiceUnavailable) WithPayload(payload *models.APIResponse) *ExportLogServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the export log service unavailable response
func (o *ExportLogServiceUnavailable) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ExportLogServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
