// Code generated by go-swagger; DO NOT EDIT.

package restoration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetRestorationsHandlerFunc turns a function with the right signature into a get restorations handler
type GetRestorationsHandlerFunc func(GetRestorationsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetRestorationsHandlerFunc) Handle(params GetRestorationsParams) middleware.Responder {
	return fn(params)
}

// GetRestorationsHandler interface for that can handle valid get restorations params
type GetRestorationsHandler interface {
	Handle(GetRestorationsParams) middleware.Responder
}

// NewGetRestorations creates a new http.Handler for the get restorations operation
func NewGetRestorations(ctx *middleware.Context, handler GetRestorationsHandler) *GetRestorations {
	return &GetRestorations{Context: ctx, Handler: handler}
}

/*
	GetRestorations swagger:route GET /restorations restoration getRestorations

# Query restoration info

Retrieve information and state of all restorations, their backup and snapshots
*/
type GetRestorations struct {
	Context *middleware.Context
	Handler GetRestorationsHandler
}

func (o *GetRestorations) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetRestorationsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
