// Code generated by go-swagger; DO NOT EDIT.

package transfer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gyk4j/toc/toc-backend/models"
)

// GetTransferOKCode is the HTTP code returned for type GetTransferOK
const GetTransferOKCode int = 200

/*
GetTransferOK Transfer info retrieved

swagger:response getTransferOK
*/
type GetTransferOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Transfer `json:"body,omitempty"`
}

// NewGetTransferOK creates GetTransferOK with default headers values
func NewGetTransferOK() *GetTransferOK {

	return &GetTransferOK{}
}

// WithPayload adds the payload to the get transfer o k response
func (o *GetTransferOK) WithPayload(payload []*models.Transfer) *GetTransferOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transfer o k response
func (o *GetTransferOK) SetPayload(payload []*models.Transfer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransferOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Transfer, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetTransferForbiddenCode is the HTTP code returned for type GetTransferForbidden
const GetTransferForbiddenCode int = 403

/*
GetTransferForbidden Forbidden from querying transfer status

swagger:response getTransferForbidden
*/
type GetTransferForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetTransferForbidden creates GetTransferForbidden with default headers values
func NewGetTransferForbidden() *GetTransferForbidden {

	return &GetTransferForbidden{}
}

// WithPayload adds the payload to the get transfer forbidden response
func (o *GetTransferForbidden) WithPayload(payload *models.APIResponse) *GetTransferForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transfer forbidden response
func (o *GetTransferForbidden) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransferForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTransferNotFoundCode is the HTTP code returned for type GetTransferNotFound
const GetTransferNotFoundCode int = 404

/*
GetTransferNotFound Transfer not found

swagger:response getTransferNotFound
*/
type GetTransferNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetTransferNotFound creates GetTransferNotFound with default headers values
func NewGetTransferNotFound() *GetTransferNotFound {

	return &GetTransferNotFound{}
}

// WithPayload adds the payload to the get transfer not found response
func (o *GetTransferNotFound) WithPayload(payload *models.APIResponse) *GetTransferNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transfer not found response
func (o *GetTransferNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransferNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTransferMethodNotAllowedCode is the HTTP code returned for type GetTransferMethodNotAllowed
const GetTransferMethodNotAllowedCode int = 405

/*
GetTransferMethodNotAllowed Bad request

swagger:response getTransferMethodNotAllowed
*/
type GetTransferMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetTransferMethodNotAllowed creates GetTransferMethodNotAllowed with default headers values
func NewGetTransferMethodNotAllowed() *GetTransferMethodNotAllowed {

	return &GetTransferMethodNotAllowed{}
}

// WithPayload adds the payload to the get transfer method not allowed response
func (o *GetTransferMethodNotAllowed) WithPayload(payload *models.APIResponse) *GetTransferMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transfer method not allowed response
func (o *GetTransferMethodNotAllowed) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransferMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTransferInternalServerErrorCode is the HTTP code returned for type GetTransferInternalServerError
const GetTransferInternalServerErrorCode int = 500

/*
GetTransferInternalServerError TOC controller error

swagger:response getTransferInternalServerError
*/
type GetTransferInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetTransferInternalServerError creates GetTransferInternalServerError with default headers values
func NewGetTransferInternalServerError() *GetTransferInternalServerError {

	return &GetTransferInternalServerError{}
}

// WithPayload adds the payload to the get transfer internal server error response
func (o *GetTransferInternalServerError) WithPayload(payload *models.APIResponse) *GetTransferInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transfer internal server error response
func (o *GetTransferInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransferInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTransferServiceUnavailableCode is the HTTP code returned for type GetTransferServiceUnavailable
const GetTransferServiceUnavailableCode int = 503

/*
GetTransferServiceUnavailable Service unavailable

swagger:response getTransferServiceUnavailable
*/
type GetTransferServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetTransferServiceUnavailable creates GetTransferServiceUnavailable with default headers values
func NewGetTransferServiceUnavailable() *GetTransferServiceUnavailable {

	return &GetTransferServiceUnavailable{}
}

// WithPayload adds the payload to the get transfer service unavailable response
func (o *GetTransferServiceUnavailable) WithPayload(payload *models.APIResponse) *GetTransferServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transfer service unavailable response
func (o *GetTransferServiceUnavailable) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransferServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
