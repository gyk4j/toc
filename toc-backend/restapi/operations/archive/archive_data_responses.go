// Code generated by go-swagger; DO NOT EDIT.

package archive

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gyk4j/toc/toc-backend/models"
)

// ArchiveDataOKCode is the HTTP code returned for type ArchiveDataOK
const ArchiveDataOKCode int = 200

/*
ArchiveDataOK Data archived

swagger:response archiveDataOK
*/
type ArchiveDataOK struct {

	/*
	  In: Body
	*/
	Payload *models.Archive `json:"body,omitempty"`
}

// NewArchiveDataOK creates ArchiveDataOK with default headers values
func NewArchiveDataOK() *ArchiveDataOK {

	return &ArchiveDataOK{}
}

// WithPayload adds the payload to the archive data o k response
func (o *ArchiveDataOK) WithPayload(payload *models.Archive) *ArchiveDataOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the archive data o k response
func (o *ArchiveDataOK) SetPayload(payload *models.Archive) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ArchiveDataOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ArchiveDataForbiddenCode is the HTTP code returned for type ArchiveDataForbidden
const ArchiveDataForbiddenCode int = 403

/*
ArchiveDataForbidden Forbidden from archiving data

swagger:response archiveDataForbidden
*/
type ArchiveDataForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewArchiveDataForbidden creates ArchiveDataForbidden with default headers values
func NewArchiveDataForbidden() *ArchiveDataForbidden {

	return &ArchiveDataForbidden{}
}

// WithPayload adds the payload to the archive data forbidden response
func (o *ArchiveDataForbidden) WithPayload(payload *models.APIResponse) *ArchiveDataForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the archive data forbidden response
func (o *ArchiveDataForbidden) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ArchiveDataForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ArchiveDataNotFoundCode is the HTTP code returned for type ArchiveDataNotFound
const ArchiveDataNotFoundCode int = 404

/*
ArchiveDataNotFound Data not found

swagger:response archiveDataNotFound
*/
type ArchiveDataNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewArchiveDataNotFound creates ArchiveDataNotFound with default headers values
func NewArchiveDataNotFound() *ArchiveDataNotFound {

	return &ArchiveDataNotFound{}
}

// WithPayload adds the payload to the archive data not found response
func (o *ArchiveDataNotFound) WithPayload(payload *models.APIResponse) *ArchiveDataNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the archive data not found response
func (o *ArchiveDataNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ArchiveDataNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ArchiveDataMethodNotAllowedCode is the HTTP code returned for type ArchiveDataMethodNotAllowed
const ArchiveDataMethodNotAllowedCode int = 405

/*
ArchiveDataMethodNotAllowed Bad request

swagger:response archiveDataMethodNotAllowed
*/
type ArchiveDataMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewArchiveDataMethodNotAllowed creates ArchiveDataMethodNotAllowed with default headers values
func NewArchiveDataMethodNotAllowed() *ArchiveDataMethodNotAllowed {

	return &ArchiveDataMethodNotAllowed{}
}

// WithPayload adds the payload to the archive data method not allowed response
func (o *ArchiveDataMethodNotAllowed) WithPayload(payload *models.APIResponse) *ArchiveDataMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the archive data method not allowed response
func (o *ArchiveDataMethodNotAllowed) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ArchiveDataMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ArchiveDataInternalServerErrorCode is the HTTP code returned for type ArchiveDataInternalServerError
const ArchiveDataInternalServerErrorCode int = 500

/*
ArchiveDataInternalServerError TOC controller error

swagger:response archiveDataInternalServerError
*/
type ArchiveDataInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewArchiveDataInternalServerError creates ArchiveDataInternalServerError with default headers values
func NewArchiveDataInternalServerError() *ArchiveDataInternalServerError {

	return &ArchiveDataInternalServerError{}
}

// WithPayload adds the payload to the archive data internal server error response
func (o *ArchiveDataInternalServerError) WithPayload(payload *models.APIResponse) *ArchiveDataInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the archive data internal server error response
func (o *ArchiveDataInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ArchiveDataInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ArchiveDataServiceUnavailableCode is the HTTP code returned for type ArchiveDataServiceUnavailable
const ArchiveDataServiceUnavailableCode int = 503

/*
ArchiveDataServiceUnavailable Service unavailable

swagger:response archiveDataServiceUnavailable
*/
type ArchiveDataServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewArchiveDataServiceUnavailable creates ArchiveDataServiceUnavailable with default headers values
func NewArchiveDataServiceUnavailable() *ArchiveDataServiceUnavailable {

	return &ArchiveDataServiceUnavailable{}
}

// WithPayload adds the payload to the archive data service unavailable response
func (o *ArchiveDataServiceUnavailable) WithPayload(payload *models.APIResponse) *ArchiveDataServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the archive data service unavailable response
func (o *ArchiveDataServiceUnavailable) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ArchiveDataServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
