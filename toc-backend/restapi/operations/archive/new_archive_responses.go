// Code generated by go-swagger; DO NOT EDIT.

package archive

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gyk4j/toc/toc-backend/models"
)

// NewArchiveOKCode is the HTTP code returned for type NewArchiveOK
const NewArchiveOKCode int = 200

/*
NewArchiveOK Data archived

swagger:response newArchiveOK
*/
type NewArchiveOK struct {

	/*
	  In: Body
	*/
	Payload *models.Archive `json:"body,omitempty"`
}

// NewNewArchiveOK creates NewArchiveOK with default headers values
func NewNewArchiveOK() *NewArchiveOK {

	return &NewArchiveOK{}
}

// WithPayload adds the payload to the new archive o k response
func (o *NewArchiveOK) WithPayload(payload *models.Archive) *NewArchiveOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new archive o k response
func (o *NewArchiveOK) SetPayload(payload *models.Archive) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewArchiveOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NewArchiveForbiddenCode is the HTTP code returned for type NewArchiveForbidden
const NewArchiveForbiddenCode int = 403

/*
NewArchiveForbidden Forbidden from archiving data

swagger:response newArchiveForbidden
*/
type NewArchiveForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewNewArchiveForbidden creates NewArchiveForbidden with default headers values
func NewNewArchiveForbidden() *NewArchiveForbidden {

	return &NewArchiveForbidden{}
}

// WithPayload adds the payload to the new archive forbidden response
func (o *NewArchiveForbidden) WithPayload(payload *models.APIResponse) *NewArchiveForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new archive forbidden response
func (o *NewArchiveForbidden) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewArchiveForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NewArchiveNotFoundCode is the HTTP code returned for type NewArchiveNotFound
const NewArchiveNotFoundCode int = 404

/*
NewArchiveNotFound Data not found

swagger:response newArchiveNotFound
*/
type NewArchiveNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewNewArchiveNotFound creates NewArchiveNotFound with default headers values
func NewNewArchiveNotFound() *NewArchiveNotFound {

	return &NewArchiveNotFound{}
}

// WithPayload adds the payload to the new archive not found response
func (o *NewArchiveNotFound) WithPayload(payload *models.APIResponse) *NewArchiveNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new archive not found response
func (o *NewArchiveNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewArchiveNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NewArchiveMethodNotAllowedCode is the HTTP code returned for type NewArchiveMethodNotAllowed
const NewArchiveMethodNotAllowedCode int = 405

/*
NewArchiveMethodNotAllowed Bad request

swagger:response newArchiveMethodNotAllowed
*/
type NewArchiveMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewNewArchiveMethodNotAllowed creates NewArchiveMethodNotAllowed with default headers values
func NewNewArchiveMethodNotAllowed() *NewArchiveMethodNotAllowed {

	return &NewArchiveMethodNotAllowed{}
}

// WithPayload adds the payload to the new archive method not allowed response
func (o *NewArchiveMethodNotAllowed) WithPayload(payload *models.APIResponse) *NewArchiveMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new archive method not allowed response
func (o *NewArchiveMethodNotAllowed) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewArchiveMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NewArchiveInternalServerErrorCode is the HTTP code returned for type NewArchiveInternalServerError
const NewArchiveInternalServerErrorCode int = 500

/*
NewArchiveInternalServerError TOC controller error

swagger:response newArchiveInternalServerError
*/
type NewArchiveInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewNewArchiveInternalServerError creates NewArchiveInternalServerError with default headers values
func NewNewArchiveInternalServerError() *NewArchiveInternalServerError {

	return &NewArchiveInternalServerError{}
}

// WithPayload adds the payload to the new archive internal server error response
func (o *NewArchiveInternalServerError) WithPayload(payload *models.APIResponse) *NewArchiveInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new archive internal server error response
func (o *NewArchiveInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewArchiveInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NewArchiveServiceUnavailableCode is the HTTP code returned for type NewArchiveServiceUnavailable
const NewArchiveServiceUnavailableCode int = 503

/*
NewArchiveServiceUnavailable Service unavailable

swagger:response newArchiveServiceUnavailable
*/
type NewArchiveServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewNewArchiveServiceUnavailable creates NewArchiveServiceUnavailable with default headers values
func NewNewArchiveServiceUnavailable() *NewArchiveServiceUnavailable {

	return &NewArchiveServiceUnavailable{}
}

// WithPayload adds the payload to the new archive service unavailable response
func (o *NewArchiveServiceUnavailable) WithPayload(payload *models.APIResponse) *NewArchiveServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the new archive service unavailable response
func (o *NewArchiveServiceUnavailable) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NewArchiveServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
