swagger: '2.0'
info:
  version: 1.0.0
  title: toc
  description: An API to create backup and restoration
  termsOfService: "http://gyk4j.github.io/terms/"
  contact:
    email: "147011991+gyk4j@users.noreply.github.com"
  license:
    name: "Eclipse Public License 2.0 (EPL)"
    url: "https://www.eclipse.org/legal/epl-2.0/"
host: 0.0.0.0:80
basePath: /v1
tags:
  - name: "backup"
    description: "For creating new backup snapshots and querying backup info"
    externalDocs:
      description: "Find out more about TOC"
      url: "https://github.com/gyk4j/toc"
  - name: "restoration"
    description: "For performing backup restoration and querying restoration info and status"
    externalDocs:
      description: "Find out more about TOC"
      url: "https://github.com/gyk4j/toc"
  - name: "transfer"
    description: "For transferring backup snapshots and querying transfer info and status"
    externalDocs:
      description: "Find out more about TOC"
      url: "https://github.com/gyk4j/toc"
  - name: "synchronization"
    description: "For sychronizing backup snapshots latest status"
    externalDocs:
      description: "Find out more about TOC"
      url: "https://github.com/gyk4j/toc"
  - name: "quota"
    description: "For checking quota limits"
    externalDocs:
      description: "Find out more about TOC"
      url: "https://github.com/gyk4j/toc"
  - name: "log"
    description: "For exporting server logs"
    externalDocs:
      description: "Find out more about TOC"
      url: "https://github.com/gyk4j/toc"
  - name: "archive"
    description: "For creating backup data ZIP archives"
    externalDocs:
      description: "Find out more about TOC"
      url: "https://github.com/gyk4j/toc"
schemes:
  - "http"
definitions:
  # Severity:
    # type: string
    # enum: &SEVERITY
      # - error
      # - warning
      # - info
      # - debug
      # - trace
  # Connections:
    # type: string
    # enum: &CONNECTIONS
      # - online
      # - offline
  # Statuses:
    # type: string
    # enum: &STATUSES
      # - queued
      # - in-progress
      # - completed
      # - failed
  # Servers:
    # type: string
    # enum: &SERVERS
      # - web
      # - file
      # - db
      # - mail
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        x-omitempty: false
      type:
        type: "string"
        x-omitempty: false
        description: "Severity level"
        enum: [ error, warning, info, debug, trace ]
      message:
        type: "string"
        x-omitempty: false
    example:
      code: 0
      type: "info"
      message: "message"
  Snapshot:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        x-omitempty: false
      file:
        type: "string"
        x-omitempty: false
      status:
        type: "string"
        x-omitempty: false
        description: "Snapshot Status"
        enum: [ queued, in-progress, completed, failed ]
      complete:
        type: "boolean"
        x-omitempty: false
    xml:
      name: "snapshot"
    example:
      file: "/var/opt/toc/archive/20241231T235959Z-server.tar.gz"
      id: 1
      status: "completed"
      complete: true
  Backup:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        x-omitempty: false
      time:
        type: "string"
        format: "date-time"
        x-omitempty: false
      snapshots:
        type: "array"
        x-omitempty: false
        items:
          $ref: "#/definitions/Snapshot"
    xml:
      name: "Backup"
    example:
      time: "2024-12-31T23:59:59Z"
      id: 1
  Restoration:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        x-omitempty: false
      backup:
        $ref: "#/definitions/Backup"
        x-omitempty: false
      status:
        type: "string"
        x-omitempty: false
        description: "Restoration Status"
        enum: [ queued, in-progress, completed, failed ]
    xml:
      name: "Restoration"
    example:
      id: 1
  Transfer:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        x-omitempty: false
      backup:
        $ref: "#/definitions/Backup"
        x-omitempty: false
      status:
        type: "string"
        x-omitempty: false
        description: "Transfer Status"
        enum: [ queued, in-progress, completed, failed ]
    xml:
      name: "Transfer"
    example:
      id: 1
      status: "failed"
  Synchronization:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        x-omitempty: false
      time:
        type: "string"
        format: "date-time"
        x-omitempty: false
      status:
        type: "string"
        x-omitempty: false
        description: "Synchronization Status"
        enum: [ queued, in-progress, completed, failed ]
    xml:
      name: "Synchronization"
    example:
      id: 1
      time: "2024-12-31T23:59:59Z"
      status: "in-progress"
  Quota:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        x-omitempty: false
      path:
        type: "string"
        x-omitempty: false
      soft:
        type: "integer"
        format: "int64"
        x-omitempty: false
      hard:
        type: "integer"
        format: "int64"
        x-omitempty: false
    xml:
      name: "Synchronization"
    example:
      id: 1
      path: "/home/toc/"
      soft: 838860800
      hard: 1073741824
  Log:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        x-omitempty: false
      time:
        type: "string"
        format: "date-time"
        x-omitempty: false
      status:
        type: "string"
        x-omitempty: false
        description: "Archive Status"
        enum: [ queued, in-progress, completed, failed ]
      url:
        type: "string"
        x-omitempty: false
    xml:
      name: "Log"
    example:
      id: 1
      time: "2024-12-31T23:59:59Z"
      status: "completed"
      url: "/static/logs-20240910T064100Z.zip"
  Archive:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        x-omitempty: false
      time:
        type: "string"
        format: "date-time"
        x-omitempty: false
      status:
        type: "string"
        x-omitempty: false
        description: "Archive Status"
        enum: [ queued, in-progress, completed, failed ]
      url:
        type: "string"
        x-omitempty: false
    xml:
      name: "Archive"
    example:
      id: 1
      time: "2024-12-31T23:59:59Z"
      status: "queued"
      url: "/archives/1"
paths:
  /backups:
    post:
      tags:
        - "backup"
      summary: "Create a new backup snapshot"
      description: "Create a new backup snapshot"
      operationId: "newBackup"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Backup started"
          schema:
            $ref: "#/definitions/Backup"
        "403":
          description: "Forbidden from creating duplicate/repeat backup"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Main backup server not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "Main TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "502":
          description: "Bad gateway. Main backup server error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable on main TOC controller"
          schema:
            $ref: "#/definitions/ApiResponse"
        "504":
          description: "Gateway timeout. Main backup server did not reply."
          schema:
            $ref: "#/definitions/ApiResponse"
    put:
      tags:
        - "backup"
      summary: "Update backup status/info"
      description: "Update backup status/info"
      operationId: "updateBackup"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Backup and associated snapshots to update"
          required: true
          schema:
            $ref: "#/definitions/Backup"
          x-exportParamName: "Body"
      responses:
        "200":
          description: "Backup updated"
          schema:
            $ref: "#/definitions/Backup"
        "403":
          description: "Forbidden from updating backup"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "TOC controller not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "502":
          description: "Bad gateway. TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable on TOC controller"
          schema:
            $ref: "#/definitions/ApiResponse"
        "504":
          description: "Gateway timeout. TOC controller did not reply."
          schema:
            $ref: "#/definitions/ApiResponse"
    get:
      tags:
        - "backup"
      summary: "Query backup info"
      description: "Retrieve information and state of all backups and their snapshots"
      operationId: "getBackups"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Backup info retrieved"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Backup"
        "403":
          description: "Forbidden from querying backup info"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Backup not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/ApiResponse"
  /backups/{backupId}:
    get:
      tags:
        - "backup"
      summary: "Find backup by ID"
      description: "Query a single backup"
      operationId: "getBackupById"
      produces:
        - "application/json"
      parameters:
        - name: "backupId"
          in: "path"
          description: "ID of backup to return"
          required: true
          type: "integer"
          format: "int64"
          x-exportParamName: "BackupId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Backup"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Backup not found"
          schema:
            $ref: "#/definitions/ApiResponse"
  /restorations:
    post:
      tags:
        - "restoration"
      summary: "Start a backup restoration attempt"
      description: "Run backup restoration and return immediately without waiting"
      operationId: "newRestoration"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Backup and associated snapshots for restoration"
          required: true
          schema:
            $ref: "#/definitions/Backup"
          x-exportParamName: "Body"
      responses:
        "200":
          description: "Restoration started"
          schema:
            $ref: "#/definitions/Restoration"
        "403":
          description: "Forbidden from creating duplicate/repeat restoration"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Stepup backup server not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "Stepup TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "502":
          description: "Bad gateway. Stepup backup server error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable on stepup TOC controller"
          schema:
            $ref: "#/definitions/ApiResponse"
        "504":
          description: "Gateway timeout. Stepup backup server did not reply."
          schema:
            $ref: "#/definitions/ApiResponse"
    put:
      tags:
        - "restoration"
      summary: "Update restoration status/info"
      description: "Update restoration status/info"
      operationId: "updateRestoration"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Restoration request to update"
          required: true
          schema:
            $ref: "#/definitions/Restoration"
          x-exportParamName: "Body"
      responses:
        "200":
          description: "Restoration updated"
          schema:
            $ref: "#/definitions/Restoration"
        "403":
          description: "Forbidden from updating restoration"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "TOC controller not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "502":
          description: "Bad gateway. TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable on TOC controller"
          schema:
            $ref: "#/definitions/ApiResponse"
        "504":
          description: "Gateway timeout. TOC controller did not reply."
          schema:
            $ref: "#/definitions/ApiResponse"
    get:
      tags:
        - "restoration"
      summary: "Query restoration info"
      description: "Retrieve information and state of all restorations, their backup and snapshots"
      operationId: "getRestorations"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Restoration info retrieved"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Restoration"
        "403":
          description: "Forbidden from querying restoration info"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Restoration not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/ApiResponse"
  /restorations/{restorationId}:
    get:
      tags:
        - "restoration"
      summary: "Find restoration by ID"
      description: "Query a single restoration"
      operationId: "getRestorationById"
      produces:
        - "application/json"
      parameters:
        - name: "restorationId"
          in: "path"
          description: "ID of restoration to return"
          required: true
          type: "integer"
          format: "int64"
          x-exportParamName: "RestorationId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Restoration"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Restoration not found"
          schema:
            $ref: "#/definitions/ApiResponse"
  /transfers:
    post:
      tags:
        - "transfer"
      summary: "Start a backup transfer attempt"
      description: "Run transfer and return immediately without waiting"
      operationId: "newTransfer"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Backup and associated snapshots for restoration"
          required: true
          schema:
            $ref: "#/definitions/Backup"
          x-exportParamName: "Body"
      responses:
        "200":
          description: "Transfer started"
          schema:
            $ref: "#/definitions/Transfer"
        "403":
          description: "Forbidden from creating duplicate/repeat transfer"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Stepup backup server not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "Stepup TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "502":
          description: "Bad gateway. Stepup backup server error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable on stepup TOC controller"
          schema:
            $ref: "#/definitions/ApiResponse"
        "504":
          description: "Gateway timeout. Stepup backup server did not reply."
          schema:
            $ref: "#/definitions/ApiResponse"
    put:
      tags:
        - "transfer"
      summary: "Update transfer status/info"
      description: "Update transfer status/info"
      operationId: "updateTransfer"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Transfer request to update"
          required: true
          schema:
            $ref: "#/definitions/Transfer"
          x-exportParamName: "Body"
      responses:
        "200":
          description: "Transfer updated"
          schema:
            $ref: "#/definitions/Transfer"
        "403":
          description: "Forbidden from updating transfer"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "TOC controller not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "502":
          description: "Bad gateway. TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable on TOC controller"
          schema:
            $ref: "#/definitions/ApiResponse"
        "504":
          description: "Gateway timeout. TOC controller did not reply."
          schema:
            $ref: "#/definitions/ApiResponse"
    get:
      tags:
        - "transfer"
      summary: "Query transfer status"
      description: "Retrieve status of all transfers"
      operationId: "getTransfers"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Transfer info retrieved"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transfer"
        "403":
          description: "Forbidden from querying transfer status"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Transfer not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/ApiResponse"
  /transfers/{transferId}:
    get:
      tags:
        - "transfer"
      summary: "Find transfer by ID"
      description: "Query a single transfer"
      operationId: "getTransferById"
      produces:
        - "application/json"
      parameters:
        - name: "transferId"
          in: "path"
          description: "ID of transfer to return"
          required: true
          type: "integer"
          format: "int64"
          x-exportParamName: "TransferId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Transfer"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Transfer not found"
          schema:
            $ref: "#/definitions/ApiResponse"
  /synchronizations:
    post:
      tags:
        - "synchronization"
      summary: "Request backup snapshot synchronization between main and stepup controller"
      description: "Initiates backup snapshot state synchronization due to network disconnection"
      operationId: "newSynchronization"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Synchronization started"
          schema:
            $ref: "#/definitions/Synchronization"
        "403":
          description: "Forbidden from starting synchronization"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "TOC controller not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "502":
          description: "Bad gateway. Backup server error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable on TOC controller"
          schema:
            $ref: "#/definitions/ApiResponse"
        "504":
          description: "Gateway timeout. One or more servers did not reply."
          schema:
            $ref: "#/definitions/ApiResponse"
    put:
      tags:
        - "synchronization"
      summary: "Update synchronization status/info"
      description: "Update synchronization status/info"
      operationId: "updateSynchronization"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Synchronization request to update"
          required: true
          schema:
            $ref: "#/definitions/Synchronization"
          x-exportParamName: "Body"
      responses:
        "200":
          description: "Synchronization updated"
          schema:
            $ref: "#/definitions/Synchronization"
        "403":
          description: "Forbidden from updating synchronization"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "TOC controller not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "502":
          description: "Bad gateway. TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable on TOC controller"
          schema:
            $ref: "#/definitions/ApiResponse"
        "504":
          description: "Gateway timeout. TOC controller did not reply."
          schema:
            $ref: "#/definitions/ApiResponse"
  /quotas:
    get:
      tags:
        - "quota"
      summary: "Refresh quota info"
      description: "Retrieve all quotas set"
      operationId: "getQuotas"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Quotas retrieved"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Quota"
        "403":
          description: "Forbidden from querying quota info"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Quota not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/ApiResponse"
  /logs:
    post:
      tags:
        - "log"
      summary: "Export logs"
      description: "Export logs for all servers"
      operationId: "exportLog"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Logs exported"
          schema:
            $ref: "#/definitions/Log"
        "403":
          description: "Forbidden from exporting logs"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Quota not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/ApiResponse"
    put:
      tags:
        - "log"
      summary: "Update log status/info"
      description: "Update log status/info"
      operationId: "updateLog"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Log request to update"
          required: true
          schema:
            $ref: "#/definitions/Log"
          x-exportParamName: "Body"
      responses:
        "200":
          description: "Log updated"
          schema:
            $ref: "#/definitions/Log"
        "403":
          description: "Forbidden from updating log request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "TOC controller not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "502":
          description: "Bad gateway. TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable on TOC controller"
          schema:
            $ref: "#/definitions/ApiResponse"
        "504":
          description: "Gateway timeout. TOC controller did not reply."
          schema:
            $ref: "#/definitions/ApiResponse"
  /archives:
    post:
      tags:
        - "archive"
      summary: "Archive data"
      description: "Create a ZIP archive of backup snapshot data"
      operationId: "newArchive"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Data archived"
          schema:
            $ref: "#/definitions/Archive"
        "403":
          description: "Forbidden from archiving data"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Data not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/ApiResponse"
    put:
      tags:
        - "archive"
      summary: "Update archive status/info"
      description: "Update archive status/info"
      operationId: "updateArchive"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Archive request to update"
          required: true
          schema:
            $ref: "#/definitions/Archive"
          x-exportParamName: "Body"
      responses:
        "200":
          description: "Archive updated"
          schema:
            $ref: "#/definitions/Archive"
        "403":
          description: "Forbidden from updating archive"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "TOC controller not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "502":
          description: "Bad gateway. TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable on TOC controller"
          schema:
            $ref: "#/definitions/ApiResponse"
        "504":
          description: "Gateway timeout. TOC controller did not reply."
          schema:
            $ref: "#/definitions/ApiResponse"
    get:
      tags:
        - "archive"
      summary: "Query archive info"
      description: "Retrieve progress, information and state of all archives"
      operationId: "getArchives"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Archive info retrieved"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Archive"
        "403":
          description: "Forbidden from querying archive info"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Archive not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "405":
          description: "Bad request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "TOC controller error"
          schema:
            $ref: "#/definitions/ApiResponse"
        "503":
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/ApiResponse"
  /archives/{archiveId}:
    get:
      tags:
        - "archive"
      summary: "Find archive by ID"
      description: "Query a single archive"
      operationId: "getArchiveById"
      produces:
        - "application/json"
      parameters:
        - name: "archiveId"
          in: "path"
          description: "ID of archive to return"
          required: true
          type: "integer"
          format: "int64"
          x-exportParamName: "ArchiveId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Archive"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Archive not found"
          schema:
            $ref: "#/definitions/ApiResponse"
externalDocs:
  description: "Find out more about TOC"
  url: "https://github.com/gyk4j/toc"