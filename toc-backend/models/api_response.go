// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// APIResponse Api response
// Example: {"code":0,"message":"message","type":"info"}
//
// swagger:model ApiResponse
type APIResponse struct {

	// code
	Code int32 `json:"code"`

	// message
	Message string `json:"message"`

	// Severity level
	// Enum: [error warning info debug trace]
	Type string `json:"type"`
}

// Validate validates this Api response
func (m *APIResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var apiResponseTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["error","warning","info","debug","trace"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiResponseTypeTypePropEnum = append(apiResponseTypeTypePropEnum, v)
	}
}

const (

	// APIResponseTypeError captures enum value "error"
	APIResponseTypeError string = "error"

	// APIResponseTypeWarning captures enum value "warning"
	APIResponseTypeWarning string = "warning"

	// APIResponseTypeInfo captures enum value "info"
	APIResponseTypeInfo string = "info"

	// APIResponseTypeDebug captures enum value "debug"
	APIResponseTypeDebug string = "debug"

	// APIResponseTypeTrace captures enum value "trace"
	APIResponseTypeTrace string = "trace"
)

// prop value enum
func (m *APIResponse) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, apiResponseTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *APIResponse) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this Api response based on context it is used
func (m *APIResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *APIResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIResponse) UnmarshalBinary(b []byte) error {
	var res APIResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
